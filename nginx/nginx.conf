events {}

http {
  log_format custome_format '$time_local $request_method $request_uri $http_user_agent $status $remote_addr'

  limit_req_zone $binary_remote_addr zone=mylimit:10m rate=3r/m; # Rate limit

  limit_req_status            429;
  limit_conn_status           429;

  server {
    listen 80;

    access_log /var/log/nginx/access.log custom_format; # Apply the custom log format
        
    location / {
      limit_req zone=mylimit burst=3 nodelay; # Maximum burst of requests before enforcing limit
      proxy_pass http://node-service:3000; # Use the service name
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr; # Client IP
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Appends clients IP
      proxy_set_header X-Forwarded-Proto $scheme; # Protocol (http or https) used by client
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade; # Used for web socket connections
      proxy_set_header Connection 'upgrade';
      proxy_cache_bypass $http_upgrade; # bypass cache if upgrade present
    }
  }
}
